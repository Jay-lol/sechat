<script>
$(function() {
    $('.ui.container.SEcontainer').attr('style', 'margin: 0 !important;');
})
const events = <%- JSON.stringify(group.events) %>;
console.log(events)
var currentDate; //동적 date 변수
var currentYear; //동적 date 변수
var currentMonth; //동적 date 변수   다음 달이나 이전 달 클릭시 동적인 날짜가 이 변수에다 저장됨
var tDay; //원래 날짜 (날)
var tMonth; //원래 날짜 (달)
var tYear; //원래 날짜 (년)

var eventDate; //이벤트 날짜
var eventDetails; //이벤트 내용

//처음에 현재 날짜를 가져오는 (초기화하는) 함수
function initStorage() {

    if (typeof(Storage) !== "undefined") {

        currentDate = new Date(); //
        currentYear = currentDate.getFullYear();
        currentMonth = currentDate.getMonth();
        tDay = currentDate.getDate(); //처음 초기화된 날짜 (원래 날짜)
        tMonth = currentDate.getMonth();
        tYear = currentDate.getFullYear();

        //날짜를 저장소에다가 저장
        localStorage.setItem("tDay", tDay.toString());
        localStorage.setItem("tMonth", tMonth.toString());
        localStorage.setItem("tYear", tYear.toString());
        localStorage.setItem("currentMonth", currentMonth.toString()); //다음달/이전달 동적으로 동작되기 위해 저장해야 함
        localStorage.setItem("currentYear", currentYear.toString());
        localStorage.setItem("initDate", "ok"); //날짜 초기화된 상태를 알려주기 위해

        //아무 스케줄 없으면 없다고 따로 포시하기 위해
        if (localStorage.getItem("isEvent") === null)
            localStorage.setItem("isEvent", "no");

    }
}
function initDate() {
    

    if (typeof(Storage) !== "undefined") {
        //날짜가 초기화되지 않을 경우 (현재 날짜가 설정되지 않을 경우)
        if(localStorage.getItem("initDate")==null) initStorage();//먼저 초기화

        currentYear = parseInt(localStorage.getItem("currentYear"));
        currentMonth = parseInt(localStorage.getItem("currentMonth"));
        tDay=parseInt(localStorage.getItem("tDay"));
        tMonth=parseInt(localStorage.getItem("tMonth"));
        tYear=parseInt(localStorage.getItem("tYear"));

        //날짜를 지정하기 (이전달이나 다음달 눌렀을때)
        currentDate= new Date(currentYear,currentMonth);

    }
    //alert(currentYear + " " + currentMonth);

    //이제 달력을 뿌리는 과정으로 넘어감
    makeCalendar();
}
// 'TODAY' 버튼을 클랙했을때 오늘의 날짜로 넘어가기
function reInitCalendar() {
    initStorage();
    location.reload();
}

//새로운 스캐줄 등록 함수
function addEvent(year,month,day) {
    //날짜를 한라인으로 합치기
    var newDate=year+" "+month+" "+day+"/";
    var newDetails;
    //사용자가 제대로 입력할때까지 ('/'를 사용하지 않아야 함 -> '/'는 문장을 분리하기 위함)
    newDetails=prompt("이벤트를 입력하세요.");

    //사용자가 스캐줄내용을 제대로 입력시 저장소에다가 저장하는 과정
    if(newDetails!=null) {
        $.ajax({
            url: '/api/group/' + '<%= group._id %>' + '/calendar/event',
            type: 'POST',
            data: {
                date: new Date(year, month, day),
                body: newDetails,
            }
        })
        .done(function(data) {
            
        })
        .fail(function(err) {
            console.log(err);
        });

        alert("Event successfully saved!");
        location.reload(); //성공적으로 저장한 다음에 페이지를 다시 실행
    }

}
//스캐줄 삭제 함수
function deleteEvent(year,month,day) {
    console.log('delete Event!')
    for (let event of events) {
        if (new Date(event.date).toString() === new Date(year, month, day).toString()) {
            $.ajax({
                url: '/api/group/' + '<%= group._id %>' + '/calendar/event/' + event._id,
                type: 'DELETE',
            }).done(_ => {
                
                location.reload();
            })
        }
    }
}
//특정 날짜에 이벤트가 있는지 확인하는 함수 있으면 그 날짜에 대한 스캐줄 반환하고, 없을면 없다고 반환
function getEvent(year,month,day) {

    //기존의 모든 스캐줄을 꺼내서 하나씩 검사하고 있으면 이벤트 반환, 없으면 없다고 반환
    for (let event of events) {
        if (new Date(event.date).toString() === new Date(year, month, day).toString()) {
            return event.body;
        }
    }
    return "no";
}
//특정한 달에 몇칠 인지 반환 (예: 11월 2018년에 -> 30일 반환)
function daysInMonth (month, year) {
    return new Date(year, month+1, 0).getDate();
}
//이전달 버튼 눌렀을때
function prevMonth() {
    //예: 3월에서 2월, 2월에서 1월, 1월에서 그 다음으로 12월 로 설정 (11은 인덱스가 0부터시작되기 때문)
    if(currentMonth<1){
        currentMonth=11;
        currentYear--;
    }
    //그렇지 않을 경우
    else currentMonth--;
    if(typeof(Storage)!=="undefined"){
        //출력 희망 달을 저장소에다 저장
        localStorage.setItem("currentMonth",(currentMonth).toString());
        localStorage.setItem("currentYear",(currentYear).toString());

    }
    location.reload(); //페이지 refresh 하면 희망 달에 대한 달력을 보여준다. 여기서 이전달을 출력할 것이다
}
//다음달 버튼 클릭시
function nextMonth() {
    //만약 해당 달이 12월일 경우
    if(currentMonth>10){
        currentMonth=0;
        currentYear++;
    }
    //그렇지 않을 경우
    else currentMonth++;
    if(typeof(Storage)!=="undefined"){
        localStorage.setItem("currentMonth",(currentMonth).toString());
        localStorage.setItem("currentYear",(currentYear).toString());
    }
    location.reload();
}
//캘린더 화면으로 뿔여주기
function makeCalendar() {

    var currentDayOfWeek=currentDate.getDay();
    var dayCount=daysInMonth(currentMonth,currentYear);//해당 달에 몇일 있는지
    var weekNames=['MON','TUE','WED','THU','FRI','SAT','SUN'];
    var monthNames=['January','February','March','April','May','June','July','August','September','October','November','December'];

    //희망달을 설정
    var tmp=new Date(currentYear,currentMonth,0);
    //해당 달의 시작이 며칠인지
    var startDay=tmp.getDay();

    //헤드 부분 희망 달과 년도 출력
    document.write("<div id='cal-container'><table><caption> <a href='schedule.html' onclick='prevMonth();return false;'>prev</a><h3 id='cal-title'>"+ monthNames[currentMonth]+" "+ currentYear+"</h3><a href='schedule.html' onclick='nextMonth();return false;'>next</a> <a id='caption-today' href='schedule.html' onclick='reInitCalendar();return false;'>today</a> </caption><thead><tr>");
    for(var i =0;i<7;i++){ //주 출력 (print weeks)
        document.write("<th>"+ weekNames[i]+"</th>");
    }
    document.write("</tr></thead><tbody>");

    //날 출력
    for(var i=0,day=1;i<dayCount+startDay;i++){

        if(i%7===0)
            document.write("</tr><tr>"); //반목문이 7일 경우 다음 라인 next line
        if(startDay >i) document.write("<td></td>");//빈 박스 출력 empty cells
        else {
            var isEvent=getEvent(currentYear,currentMonth,day); //해당 날짜에 스캐줄 얻어옴
            if(currentYear===tYear&&currentMonth===tMonth&&day===tDay){ //오늘 날짜를 원형으로 출력
                if(isEvent!=="no") { //오늘 날짜에서 이벤트가 있을 경우
                    document.write("<td><div id='cell-days-with-event'><div><p id='today'>" + day + "</p><br><div id='events' onclick='deleteEvent(currentYear,currentMonth,"+day+");return false;'>"+isEvent+"</div></div></div></td>");
                }
                else{//없을 경우
                    document.write("<td><div id='cell-days-no-event'><div onclick='addEvent(currentYear,currentMonth," + day + ");return false;' ><p id='today'>" + day + "</p></div></div></td>");
                }
            }
            else { //오늘 날짜 아닐 경우 rest of days
                if(isEvent!=="no"){//이벤트가 없을 경우
                    document.write("<td><div id='cell-days-with-event'><div>"+day+"<br><div id='events' onclick='deleteEvent(currentYear,currentMonth,"+day+");return false;'>"+isEvent+"</div>");
                }
                else{//이벤트가 있을 경우
                    document.write("<td><div id='cell-days-no-event'><div onclick='addEvent(currentYear,currentMonth,"+day+");return false;' >"+day+"</div></div></td>");
                }
            }
            day++;
        }

    }
    //테이블 cell 부족할 경우 빈 cell 더 출력
    if(i>35) {
        while (i < 42) {
            document.write("<td></td>");
            i++;
        }
    } //테이블 cell 부족할 경우 빈 cell 더 출력
    else if(i>28&&i<35){
        while (i < 35) {
            document.write("<td></td>");
            i++;
        }
    }

    document.write("</tr></tbody></table></div> ");

}

initDate();
</script>
